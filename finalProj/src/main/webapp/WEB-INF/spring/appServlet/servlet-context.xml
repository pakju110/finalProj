<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
		xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!--multipart(파일업로드)를 처리하기위한 클래스
     이름을 변경해서 사용할 수 없다
   이게 없으면 multipart/form-data 한 경우 parameter를 가져올수 없다.-->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.kimjoha.kjh" />
	<context:component-scan base-package="hta" />
	
	<!-- 커넥션풀을 사용하기 위한 dataSource bean 등록 -->
	<beans:bean 
	id="dataSource"
	class="org.apache.commons.dbcp.BasicDataSource">
	<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
	<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
	<beans:property name="username" value="java"/>
	<beans:property name="password" value="java"/>
	<beans:property name="maxActive" value="500"/>
	<beans:property name="maxIdle" value="100"/>
	<beans:property name="poolPreparedStatements" value="true"/>
	<beans:property name="defaultAutoCommit" value="true"/>
	</beans:bean>
	
	<beans:bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>
	
	<beans:bean 
	name="sqlSessionFactoryBean"
	class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="typeAliasesPackage" value="hta"/>
		<beans:property name="configLocation" value="classpath:/mybatis/mybatisConfig.xml"/>
		<beans:property name="mapperLocations">
			<beans:array>
				<beans:value>classpath:/mybatis/usermapper.xml</beans:value>
				<beans:value>classpath:/mybatis/downmapper.xml</beans:value>
				
			</beans:array>
		</beans:property>
	</beans:bean>
	
	<beans:bean name="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
	<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactoryBean" />
	
	</beans:bean>
		
		<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
	
	
</beans:beans>
